{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,SAAS;;;;;;;;;;;;;;ACpHxB;AACA;AACA,wFAAwF;AACxF,wFAAwF;AACxF,wFAAwF;AACxF,wFAAwF;AACxF,wFAAwF;AACxF,wFAAwF;AACxF,wFAAwF;AACxF,wFAAwF;AACxF,wFAAwF;AACxF,wFAAwF;AACxF;AACA;AACA;AACA,wFAAwF;AACxF;AACA;AACA,wFAAwF;AACxF,wFAAwF;AACxF;AACA,wFAAwF;AACxF,wFAAwF;AACxF,wFAAwF;AACxF,cAAc;AACd,wFAAwF;AACxF;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,+BAA+B,UAAU,MAAM,SAAS;AACxD,sDAAsD,WAAW;AACjE,oDAAoD,WAAW;AAC/D;AACA;AACA;AACA,8DAA8D,WAAW;AACzE;AACA;AACA;AACA;AACA,0FAA0F;AAC1F;AACA;AACA;AACA,yFAAyF;AACzF;AACA;AACA,yFAAyF;AACzF,+CAA+C,IAAI,YAAY,WAAW;AAC1E;AACA;AACA,yFAAyF;AACzF;AACA;AACA;AACA,yFAAyF;AACzF,2BAA2B,iCAAiC,oCAAoC;AAChG,iGAAiG;AACjG,aAAa;AACb,SAAS;AACT;AACA;AACA,oGAAoG;AACpG,uCAAuC,iCAAiC;AACxE;AACA,gBAAgB;AAChB,YAAY;AACZ;AACA;AACA;AACA;AACA,mFAAmF;AACnF,YAAY;AACZ;AACA,mFAAmF;AACnF,0BAA0B,iCAAiC,wBAAwB;AACnF,mFAAmF;AACnF,mFAAmF;AACnF;AACA,8BAA8B,KAAK,MAAM,OAAO;AAChD,qDAAqD,MAAM;AAC3D,mDAAmD,MAAM;AACzD;AACA;AACA;AACA,6DAA6D,MAAM;AACnE;AACA;AACA;AACA,oFAAoF;AACpF,YAAY;AACZ;AACA;AACA;AACA;AACA,oDAAoD;AACpD;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,KAAK;;;;;;;;;;;;;;;AC1GmC;AACvD;AACA;AACA,uFAAuF;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gFAAgF;AAChF;AACA,KAAK;AACL;AACA;AACA,+EAA+E;AAC/E;AACA,+EAA+E;AAC/E;AACA,aAAa;AACb;AACA,SAAS;AACT;AACA;AACA;AACA,mFAAmF;AACnF,+EAA+E;AAC/E,+EAA+E;AAC/E;AACA,+EAA+E;AAC/E,+EAA+E;AAC/E;AACA;AACA;AACA,+EAA+E;AAC/E;AACA,gFAAgF;AAChF;AACA,kFAAkF;AAClF,kFAAkF;AAClF;AACA;AACA,2EAA2E,mBAAmB;AAC9F,+EAA+E;AAC/E;AACA;AACA,8FAA8F;AAC9F;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA;AACA,aAAa;AACb;AACA,kFAAkF;AAClF;AACA,kFAAkF;AAClF,kFAAkF;AAClF;AACA;AACA,kFAAkF;AAClF,kFAAkF;AAClF;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,gBAAgB;AAChB,SAAS;AACT;AACA;AACA;AACA,mFAAmF;AACnF;AACA,mFAAmF;AACnF,mFAAmF;AACnF,QAAQ,0DAAS,wFAAwF;AACzG;AACA,mFAAmF;AACnF,mFAAmF;AACnF;AACA;AACA,4DAA4D;AAC5D,4CAA4C,QAAQ;AACpD;AACA,mFAAmF;AACnF;AACA,mFAAmF;AACnF;AACA;AACA,mFAAmF;AACnF,mFAAmF;AACnF,mFAAmF;AACnF;AACA,YAAY,2DAAU,qEAAqE;AAC3F;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,+BAA+B;AAChE;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,KAAK;;;;;;;;;;;;;;;;AChIpB;AACA;AACA,8EAA8E;AAC9E,8EAA8E;AAC9E,8EAA8E;AAC9E;AACA;AACA,gFAAgF;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6EAA6E;AAC7E,6EAA6E;AAC7E,6EAA6E;AAC7E;AACA;AACA;AACA;AACA;AACA,oFAAoF;AACpF;AACA;AACA;AACA,kHAAkH;AAClH,CAAC;AACD;AACA;AACA;AACA;AACA,+EAA+E;AAC/E,mFAAmF;AACnF;AACA;AACA,CAAC;AACD;AACA,+EAA+E;AAC/E;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA,kHAAkH;AAClH,gHAAgH;AAChH,2IAA2I;AAC3I,gHAAgH;AAChH;AACA;AACA;AACA,gFAAgF;AAChF;AACA;AACA;AACA,iEAAe,WAAW,EAAC;AACP;;;;;;;;;;;;;;;AC3DpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,cAAc;AAC9C,mCAAmC,WAAW;AAC9C,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,mBAAmB;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,qDAAqD,OAAO;AAC5D;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA,qDAAqD,OAAO;AAC5D;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yDAAyD,OAAO;AAChE;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,WAAW;AAClD,UAAU;AACV;AACA;AACA;AACA;AACA,2EAA2E;AAC3E;AACA;AACA,mCAAmC,cAAc,0BAA0B;AAC3E,SAAS;AACT,kCAAkC,cAAc,2BAA2B;AAC3E;AACA;AACA,2EAA2E;AAC3E,2EAA2E;AAC3E;AACA;AACA,0EAA0E;AAC1E;AACA;AACA;AACA,0EAA0E;AAC1E;AACA,0EAA0E;AAC1E;AACA;AACA,yCAAyC,WAAW,sBAAsB;AAC1E,aAAa;AACb,0EAA0E;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yEAAyE;AACzE;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA,iEAAe,MAAM;;;;;;;;;;;;;;ACjMrB;AACA;AACA;AACA,8FAA8F;AAC9F;AACA;AACA,6FAA6F;AAC7F;AACA;AACA;AACA,SAAS;AACT;AACA,4FAA4F;AAC5F;AACA,SAAS;AACT;AACA;AACA,2FAA2F;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0FAA0F;AAC1F,0FAA0F;AAC1F;AACA,0FAA0F;AAC1F,0FAA0F;AAC1F,0FAA0F;AAC1F,0FAA0F;AAC1F;AACA;AACA,aAAa;AACb;AACA,KAAK;AACL;AACA;AACA,iEAAe,IAAI;;;;;;;;;;;;;;AC1CnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,KAAK,GAAG,UAAU,GAAG,WAAW;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,IAAI;AAC3B,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,KAAK;;;;;;UC/DpB;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;ACNY;AACZ;AACA,CAAkC;AACc;AACZ;AACA;AACA;AACE;AACM;AACI;AAChD;AACA;AACA;AACA,0CAA0C,+DAAS,8DAA8D;AACjH;AACA,IAAI,yDAAI;AACR,IAAI,gEAAW;AACf,IAAI,0DAAK;AACT,IAAI,0DAAK;AACT,IAAI,0DAAK;AACT,IAAI,2DAAM;AACV,IAAI,8DAAS;AACb;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://tabs/./js/modules/calculate.js","webpack://tabs/./js/modules/cards.js","webpack://tabs/./js/modules/forms.js","webpack://tabs/./js/modules/modalwindow.js","webpack://tabs/./js/modules/slider.js","webpack://tabs/./js/modules/tabs.js","webpack://tabs/./js/modules/timer.js","webpack://tabs/webpack/bootstrap","webpack://tabs/webpack/runtime/define property getters","webpack://tabs/webpack/runtime/hasOwnProperty shorthand","webpack://tabs/webpack/runtime/make namespace object","webpack://tabs/./js/script.js"],"sourcesContent":["function calculate() {\r\n    const result = document.querySelector('.calculating__result span');\r\n\r\n    let sex, height, weight, age, ratio;\r\n\r\n    if (localStorage.getItem('sex')) {\r\n        sex =  localStorage.getItem('sex')\r\n    } else {\r\n        sex = 'femail';\r\n        localStorage.setItem('sex', 'femail');\r\n    }\r\n\r\n    if (localStorage.getItem('ratio')) {\r\n        ratio =  localStorage.getItem('ratio')\r\n    } else {\r\n        ratio = 1.375;\r\n        localStorage.setItem('ratio', '1.375');\r\n    }\r\n\r\n    function initLocalSettings(selector, activeClass) {\r\n        const elements = document.querySelectorAll(selector);\r\n\r\n        elements.forEach((item) => {\r\n            item.classList.remove(activeClass);\r\n            if (item.getAttribute('id') === localStorage.getItem('sex')) {\r\n                item.classList.add(activeClass);\r\n            }\r\n            if (item.getAttribute('data-ratio') === localStorage.getItem('ratio')) {\r\n                item.classList.add(activeClass);\r\n            }\r\n        });\r\n    }\r\n\r\n    initLocalSettings('#gender div', 'calculating__choose-item_active');\r\n    initLocalSettings('.calculating__choose_big div', 'calculating__choose-item_active');\r\n\r\n    function calcTotal() {\r\n        if (!sex || !height || !weight || !age || !ratio) {\r\n            result.textContent = '____'; // Можете придумать что угодно\r\n            return;\r\n        }\r\n        if (sex === 'female') {\r\n            result.textContent = Math.round((447.6 + (9.2 * weight) + (3.1 * height) - (4.3 * age)) * ratio);\r\n        } else {\r\n            result.textContent = Math.round((88.36 + (13.4 * weight) + (4.8 * height) - (5.7 * age)) * ratio);\r\n        }\r\n    }\r\n\r\n    calcTotal();\r\n\r\n    function getStaticInformation(selector, activeClass) {\r\n        const elements = document.querySelectorAll(selector);\r\n\r\n        elements.forEach(elem => {\r\n            elem.addEventListener('click', (e) => {\r\n                if (e.target.getAttribute('data-ratio')) {\r\n                    ratio = +e.target.getAttribute('data-ratio');\r\n                    localStorage.setItem('ratio', e.target.getAttribute('data-ratio'));\r\n                } else {\r\n                    sex = e.target.getAttribute('id');\r\n                    localStorage.setItem('sex', e.target.getAttribute('id'));\r\n                }\r\n    \r\n                elements.forEach(elem => {\r\n                    elem.classList.remove(activeClass);\r\n                });\r\n    \r\n                e.target.classList.add(activeClass);\r\n    \r\n                calcTotal();\r\n            });\r\n        });\r\n    }\r\n\r\n    getStaticInformation('#gender div', 'calculating__choose-item_active');\r\n    getStaticInformation('.calculating__choose_big div', 'calculating__choose-item_active');\r\n\r\n    function getDynamicInformation(selector) {\r\n        const input = document.querySelector(selector);\r\n\r\n        input.addEventListener('input', () => {\r\n\r\n            if (input.value.match(/\\D/g)) {\r\n                input.style.border = '2px solid red';\r\n                input.style.color = 'red';\r\n                input.style.textDecoration = 'underline'\r\n            } else {\r\n                input.style.border = 'none';\r\n                input.style.color = 'black';\r\n                input.style.textDecoration = 'none'\r\n            }\r\n            \r\n            switch(input.getAttribute('id')) {\r\n                \r\n                case \"height\":\r\n                    \r\n                    height = +input.value;\r\n                    break;\r\n                case \"weight\":\r\n                    \r\n                    weight = +input.value;\r\n                    break;\r\n                case \"age\":\r\n                    age = +input.value;\r\n                    break;\r\n            }\r\n\r\n            calcTotal();\r\n        });\r\n    }\r\n\r\n    getDynamicInformation('#height');\r\n    getDynamicInformation('#weight');\r\n    getDynamicInformation('#age');\r\n}\r\n\r\nexport default calculate;","function cards() {\r\n    class MenuCard {\r\n        constructor(src, alt, title, descr, price, parentSelector, ...classes) {        //Создаем конструктор класса с параметрами(аргументами), а также с rest оператором для добавления в будущем других аргументов\r\n            this.src = src;                                                             //путь к картинке\r\n            this.alt = alt;                                                             //альт картинки\r\n            this.title = title;                                                         //название карточки\r\n            this.descr = descr;                                                         //текст карточки\r\n            this.price = price;                                                         //цена на карточке\r\n            this.classes = classes;                                                     //массив из аргументов\r\n            this.parent = document.querySelector(parentSelector);                       //селектор элемента\r\n            this.transfer = 27;                                                         //курс доллара\r\n            this.changeToUAH();                                                         //метод, переводящий доллары в гривны\r\n        }\r\n\r\n        changeToUAH() {\r\n            this.price = this.price * this.transfer;                                    //Сам метод, переводящий доллары в гривны\r\n        }\r\n\r\n        render () {                                                                     //Основной метод render()\r\n            const element = document.createElement('div');                              //Создаем html элемент\r\n\r\n            if (this.classes.length === 0) {                                            //Создаем условие, что если в конструкторе в массиве classes 0 элементов\r\n                this.classes = 'menu__item';                                            //то добавляем в classes дефолтное значение класса\r\n                element.classList.add(this.classes);                                    //и добавляем к элементу этот класс\r\n            } else {\r\n                this.classes.forEach(className => {                                     //а иначе перебираем этот массив и добавляем к элементу эти классы, переданные в массив classes\r\n                    element.classList.add(className)\r\n                });\r\n            }\r\n\r\n            \r\n            element.innerHTML = `                                                       \r\n            \r\n                    <img src=${this.src} alt=${this.alt}>\r\n                    <h3 class=\"menu__item-subtitle\">${this.title}</h3>\r\n                    <div class=\"menu__item-descr\">${this.descr}</div>\r\n                    <div class=\"menu__item-divider\"></div>\r\n                    <div class=\"menu__item-price\">\r\n                        <div class=\"menu__item-cost\">Цена:</div>\r\n                        <div class=\"menu__item-total\"><span>${this.price}</span> грн/день</div>\r\n                    </div>\r\n                \r\n            `\r\n                                                                                          \r\n            this.parent.append(element);                                                  //Добавляем наш элемент с содержимым в родительский элемент parent\r\n        }\r\n    }\r\n\r\n    const getResource = async (url) => {                                                 //Отправляем запрос на получение данных\r\n        const res = await fetch(url);\r\n\r\n        if (!res.ok) {                                                                   //Если статус не ок, выкидывем ошибку\r\n            throw new Error(`Could not fetch ${url}, status: ${res.status}`);\r\n        }\r\n\r\n        return await res.json();                                                         //Иначе возвращаем данные в json формате\r\n    };\r\n\r\n    getResource('http://localhost:3000/menu')                                            //делаем запрос на сервер\r\n        .then(data => {                                                                  //Получаем ответ\r\n            data.forEach(({img, altimg, title, descr, price}) => {                              //Перебираем данные, создавая новый объект на основе класса и применяя к нему метод render()\r\n                new MenuCard(img, altimg, title, descr, price, '.menu .container').render();     //Используем деструктуризацию для перебора свойств объекта\r\n            })\r\n        });\r\n\r\n    // axios.get('http://localhost:3000/menu')\r\n    //     .then(dataProm => {                                                                      //Получение данных с сервера при помощи библиотеки axios\r\n    //         dataProm.data.forEach(({img, altimg, title, descr, price}) => {                              \r\n    //             new MenuCard(img, altimg, title, descr, price, '.menu .container').render();\r\n    //         });\r\n    //     });\r\n\r\n                                                                               \r\n    // getResource('http://localhost:3000/menu')\r\n    //     .then(data => {\r\n    //         createCard(data);                                                   //Делаем запрос на сервер и вызываем функцию обработки данных\r\n    //     });\r\n\r\n    // function createCard(data) {                                                 //Функция работы с данными\r\n    //     data.forEach(({img, altimg, title, descr, price}) => {                  //Перебираем данные, раскладывая полученный объект на свойства\r\n    //         const element = document.createElement('div');                      //Создаем элемент\r\n    //         element.classList.add('menu__item');                                //Добавляем класс и разметку со свойствами в нашем полученном объекте\r\n    //         element.innerHTML = `                                               \r\n    //             <img src=${img} alt=${altimg}>\r\n    //             <h3 class=\"menu__item-subtitle\">${title}</h3>\r\n    //             <div class=\"menu__item-descr\">${descr}</div>\r\n    //             <div class=\"menu__item-divider\"></div>\r\n    //             <div class=\"menu__item-price\">\r\n    //                 <div class=\"menu__item-cost\">Цена:</div>\r\n    //                 <div class=\"menu__item-total\"><span>${price}</span> грн/день</div>\r\n    //             </div>\r\n    //         `;\r\n\r\n    //         document.querySelector('.menu .container').append(element);          //Добавляем элемент на страницу\r\n    //     })\r\n    // }   \r\n\r\n        //ОПЕРАТОР REST\r\n\r\n    // const log = function(a, b, ...rest) {        //оператор rest в данном примере собирает оставшиеся аргументы в массив\r\n    //     console.log(a, b, rest)\r\n    // }\r\n    // log(23, 24, 25, 27);\r\n\r\n}\r\n\r\nexport default cards;","import {closeModal, modalOpen} from './modalwindow.js';\r\n\r\nfunction forms(formSelector, modalTimerId) {\r\n    const forms = document.querySelectorAll(formSelector);                             //NodeList форм сайта\r\n    const message = {\r\n        loading: 'img/form/spinner.svg',                                         //Объект с записями после отправки формы\r\n        success: 'Спасибо! Скоро мы с вами свяжемся',                            //В loading -- путь к файлу svg\r\n        failure: 'Что-то пошло не так...'\r\n    };\r\n\r\n\r\n    forms.forEach(item => {                                                     //Перебираем формы, подставляя их в аргумент функции\r\n        bindPostData(item);\r\n    });\r\n\r\n    const postData = async (url, data) => {\r\n        const res = await fetch(url, {                                         //Создаем асинхронную функцию\r\n            method: 'POST',                                                    //и ожидаем fetch\r\n            headers: {                                                         //после этого возвращаем ответ в json формате\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: data\r\n        });\r\n        return await res.json();\r\n    };\r\n\r\n    function bindPostData(form) {                                                  //Основная функция\r\n        form.addEventListener('submit', (e) => {                               //Событие при отправке формы submit\r\n            e.preventDefault();                                                //Изменяем стандартное действия браузера\r\n\r\n            let statusMessage = document.createElement('img');                 //Создаем элемент img\r\n            statusMessage.src =message.loading;                                //Добавляем src атрибут к нему\r\n            statusMessage.style.cssText = `\r\n                display: block;                                                \r\n                margin: 0 auto;\r\n            `;                                                                 //Добавляем CSS свойства элементу img\r\n            \r\n            form.insertAdjacentElement('afterend', statusMessage);              //Добавляем в форму наш код\r\n        \r\n            // const request = new XMLHttpRequest();                              //Создаем объект на основе класса XML..\r\n            // request.open('POST', 'server.php');                                //Инициализируем запрос на сервер методом POST\r\n         \r\n\r\n            // request.setRequestHeader('Content-type', 'application/json; charset=utf-8');   //Отправляем заголовки\r\n            const formData = new FormData(form);                               //Создаем объект formData на основе класса FormData, передавая параметр нашей формы\r\n\r\n             \r\n            const json = JSON.stringify(Object.fromEntries(formData.entries()));              //Берем formData, сначало превращаем массив массивов ее, после этого превращаем ее в классический объект, а после уже превращаем в JSON\r\n                                                                                              \r\n           \r\n            postData('http://localhost:3000/requests', json)                       //Отправляем данные на сервер\r\n            .then(data => {\r\n                console.log(data);\r\n                showThanksModal(message.success);\r\n                statusMessage.remove();\r\n            })\r\n            .catch(() => {\r\n                showThanksModal(message.failure);\r\n            })\r\n            .finally(() => {\r\n                form.reset();\r\n            });\r\n           \r\n            // request.send(json);                                                //Отправляем на сервер наши json-данные\r\n\r\n            // request.addEventListener('load', () => {                           //Создаем событие load при загрузке данных на сервер\r\n            //     if (request.status === 200) {                                  //Если статус запроса, отправки 200\r\n            //         console.log(request.response);\r\n\r\n            //         showThanksModal(message.success);                          //Вызываем функцию нового модально окна после отправки\r\n            //         form.reset();                                              //Скидываем данные с полей форм\r\n            \r\n            //         statusMessage.remove();\r\n                        \r\n                   \r\n            //     } else {\r\n            //         showThanksModal(message.failure);\r\n            //     }\r\n            // });\r\n        });\r\n    }\r\n\r\n\r\n    function showThanksModal(message) {                                            //Создаем функцию модального окна \"Спасибо\" (аргумент -- сообщение пользователю)\r\n\r\n        const prevModalDialog = document.querySelector('.modal__dialog');          //Находим элемент модального окна\r\n        prevModalDialog.classList.add('hide');                                     //Добавляем к нему класс\r\n        modalOpen('.modal', modalTimerId);                                                               //Методом открываем модальное окно\r\n \r\n        const thankModal = document.createElement('div');                          //Создаем элемент div\r\n        thankModal.classList.add('.modal__dialog');                                //Добавляем к нему класс\r\n        thankModal.innerHTML = `                                                   \r\n            <div class=\"modal__content\">\r\n                <div class=\"modal__close\" data-close>&times;</div>\r\n                <div class=\"modal__title\">${message}</div>\r\n            </div>\r\n        `;                                                                         //Добавляем к нему контент\r\n                                                                                    \r\n        document.querySelector('.modal').append(thankModal);                       //Добавляем этот созданный элемент, родитель которого является элемент с классом \"modal\"\r\n\r\n        setTimeout(() => {                                                         \r\n            thankModal.remove();                                                   //Удаляем это новое модальное окно\r\n            prevModalDialog.classList.add('show');                                 //Добавляем элементу с классом '.modal__dialog' новый класс\r\n            prevModalDialog.classList.remove('hide');                              //Удаляем у него класс \"hide\"\r\n\r\n            closeModal('.modal');                                                          //Закрываем новое модальное окно через4с\r\n            \r\n        }, 4000)                                                                   \r\n    }\r\n\r\n    //*********************** FETCH API **********************/\r\n    \r\n\r\n    // fetch('https://jsonplaceholder.typicode.com/posts', {\r\n    //     method: \"POST\",\r\n    //     body: JSON.stringify({name: 'Igor', family: 'Tronin'}),\r\n    //     headers: {\r\n    //         'Content-type': 'application/json'\r\n    //     }\r\n    // })\r\n    //     .then(response => response.json())\r\n    //     .then(json => console.log(json))\r\n\r\n    // fetch('http://localhost:3000/menu')\r\n    //     .then(data => data.json())\r\n    //     .then(res => console.log(res));\r\n}\r\n\r\nexport default forms;","function modalOpen(modalSelector, modalTimerId) {\r\n  const modal = document.querySelector(modalSelector);\r\n  modal.classList.add('show');                                                //Функция открытия модально окна       --добавляется класс\r\n  modal.classList.remove('hide');                                             //                                     --удаляется класс  \r\n  document.body.style.overflow = 'hidden';                                    //                                     --добавляется свойство css\r\n  console.log(modalTimerId);\r\n  if (modalTimerId) {\r\n    clearInterval(modalTimerId);                                                //                                     --удаляется функция интервала\r\n  }\r\n  \r\n\r\n}\r\n\r\nfunction closeModal (modalSelector) {\r\n  const modal = document.querySelector(modalSelector);\r\n  modal.classList.add('hide');                                               //Функция закрытия модально окна       --добавляется класс\r\n  modal.classList.remove('show');                                            //                                     --удаляется класс\r\n  document.body.style.overflow = 'auto';                                     //                                     --добавляется свойство css\r\n}\r\n\r\n\r\nfunction modalWindow(triggerSelector, modalSelector, modalTimerId) {\r\n    const modalTrigger = document.querySelectorAll(triggerSelector),                  //Создаем переменные по атрибутам элемента\r\n    modal = document.querySelector(modalSelector);                                  //Переменная модального окна\r\n                        \r\n\r\nmodalTrigger.forEach(item => {\r\n  item.addEventListener('click', () => modalOpen(modalSelector, modalTimerId));                                   //Перебираем триггеры(кнопки) и создаем для каждого событие клик с функцией открытия модально окна\r\n});\r\n\r\n\r\n\r\n\r\nmodal.addEventListener('click', (e) => {                                       //Если клик на область вне модально окна то функция закрытия\r\n  if (e.target === modal || e.target.getAttribute('data-close') == '') {           //или на элемент с атрибутом data-close, который без значения\r\n      closeModal(modalSelector);\r\n  }\r\n});\r\n\r\ndocument.addEventListener('keydown', (e) => {                                  //Событие при нажатии на кнопку \"Escape\", тоже закрытие окна\r\n  if (e.key === 'Escape' && modal.classList.contains('show')) {\r\n      closeModal(modalSelector);\r\n  }\r\n});\r\n\r\n\r\n\r\nfunction showModalByScroll() {                                                                                    //Если сумма высоты документа и высоты экрана больше либо равно \r\n  if (window.pageYOffset + document.documentElement.clientHeight >= document.documentElement.scrollHeight) {    //перемещению по высоте документа\r\n      modalOpen(modalSelector, modalTimerId);                                                                                              //вызываем функцию открытия окна\r\n      window.removeEventListener('scroll', showModalByScroll);                                                  //и удаляем событие скролла с этой самой функцией\r\n  }\r\n}\r\n\r\nwindow.addEventListener('scroll', showModalByScroll);                           //Событие скролла с функцией showModalByScroll\r\n\r\n}\r\n\r\nexport default modalWindow;\r\nexport {closeModal};\r\nexport {modalOpen};","function slider() {\r\n    let offset = 0;\r\n    let slideIndex = 1;\r\n\r\n    const slides = document.querySelectorAll('.offer__slide'),\r\n        slider = document.querySelector('.offer__slider'),\r\n        prev = document.querySelector('.offer__slider-prev'),\r\n        next = document.querySelector('.offer__slider-next'),\r\n        total = document.querySelector('#total'),\r\n        current = document.querySelector('#current'),\r\n        slidesWrapper = document.querySelector('.offer__slider-wrapper'),\r\n        width = window.getComputedStyle(slidesWrapper).width,\r\n        slidesField = document.querySelector('.offer__slider-inner');\r\n\r\n    if (slides.length < 10) {\r\n        total.textContent = `0${slides.length}`;\r\n        current.textContent =  `0${slideIndex}`;\r\n    } else {\r\n        total.textContent = slides.length;\r\n        current.textContent =  slideIndex;\r\n    }\r\n    \r\n    slidesField.style.width = 100 * slides.length + '%';\r\n    slidesField.style.display = 'flex';\r\n    slidesField.style.transition = '0.5s all';\r\n\r\n    slidesWrapper.style.overflow = 'hidden';\r\n\r\n    slides.forEach(slide => {\r\n        slide.style.width = width;\r\n    });\r\n\r\n    slider.style.position = 'relative';\r\n\r\n    const indicators = document.createElement('ol');\r\n    const dots = [];\r\n\r\n    indicators.classList.add('carousel-indicators');\r\n    indicators.style.cssText = `\r\n        position: absolute;\r\n        right: 0;\r\n        bottom: 0;\r\n        left: 0;\r\n        z-index: 15;\r\n        display: flex;\r\n        justify-content: center;\r\n        margin-right: 15%;\r\n        margin-left: 15%;\r\n        list-style: none;\r\n    `;\r\n    slider.append(indicators);\r\n\r\n    for (let i = 0; i < slides.length; i++) {\r\n        const dot = document.createElement('li');\r\n        dot.setAttribute('data-slide-to', i + 1);\r\n        dot.style.cssText = `\r\n            box-sizing: content-box;\r\n            flex: 0 1 auto;\r\n            width: 30px;\r\n            height: 6px;\r\n            margin-right: 3px;\r\n            margin-left: 3px;\r\n            cursor: pointer;\r\n            background-color: #fff;\r\n            background-clip: padding-box;\r\n            border-top: 10px solid transparent;\r\n            border-bottom: 10px solid transparent;\r\n            opacity: .5;\r\n            transition: opacity .6s ease;\r\n        `;\r\n        if (i == 0) {\r\n            dot.style.opacity = '1';\r\n        }\r\n        indicators.append(dot);\r\n        dots.push(dot);\r\n    }\r\n\r\n    next.addEventListener('click', () => {\r\n        if (offset == (+width.slice(0, width.length - 2) * (slides.length - 1))) {\r\n            offset = 0;\r\n        } else {\r\n            offset += +width.slice(0, width.length - 2); \r\n        }\r\n\r\n        slidesField.style.transform = `translateX(-${offset}px)`;\r\n\r\n        if (slideIndex == slides.length) {\r\n            slideIndex = 1;\r\n        } else {\r\n            slideIndex++;\r\n        }\r\n\r\n        currTextContent();\r\n\r\n        getOpacity(dots);\r\n\r\n    });\r\n\r\n    prev.addEventListener('click', () => {\r\n        if (offset == 0) {\r\n            offset = +width.slice(0, width.length - 2) * (slides.length - 1);\r\n        } else {\r\n            offset -= +width.slice(0, width.length - 2);\r\n        }\r\n\r\n        slidesField.style.transform = `translateX(-${offset}px)`;\r\n\r\n        if (slideIndex == 1) {\r\n            slideIndex = slides.length;\r\n        } else {\r\n            slideIndex--;\r\n        }\r\n\r\n        currTextContent();\r\n\r\n        getOpacity(dots);\r\n      \r\n    });\r\n\r\n    \r\n\r\n    dots.forEach(dot => {\r\n        dot.addEventListener('click', (e) => {\r\n            const slideTo = e.target.getAttribute('data-slide-to');\r\n\r\n            slideIndex = slideTo;\r\n            offset = +width.slice(0, width.length - 2) * (slideTo - 1);\r\n\r\n            slidesField.style.transform = `translateX(-${offset}px)`\r\n\r\n            currTextContent();\r\n\r\n            getOpacity(dots);\r\n\r\n        });\r\n    });\r\n\r\n    function getOpacity(arrayDots) {\r\n        arrayDots.forEach(dot => dot.style.opacity = '.5');\r\n        arrayDots[slideIndex - 1].style.opacity = '1';\r\n    }\r\n\r\n    function currTextContent() {\r\n        if (slides.length < 10) {\r\n            current.textContent =  `0${slideIndex}`;\r\n        } else {\r\n            current.textContent =  slideIndex;\r\n        }\r\n    };\r\n\r\n    // showSlides(slideIndex);                                             //Инициализация слайдов\r\n\r\n    // if (slides.length < 10) {\r\n    //     total.textContent = `0${slides.length}`;                        //Если количество слайдов меньше 10, то добавляем в текст элемента перед числом 0\r\n    // } else {\r\n    //     total.textContent = `${slides.length}`;                         //иначе не добавляем\r\n    // }\r\n\r\n    // function showSlides(n) {                                            //Функция для числового изменения номера слайда\r\n    //     if (n > slides.length) {                                        //Если номер слайда больше длины массива слайдов, ставим переменную на 1\r\n    //         slideIndex = 1\r\n    //     }\r\n    //     if (n < 1) {                                                   //Если номер слайда меньше 1, ставим переменную в номер длины слайдов\r\n    //         slideIndex = slides.length;\r\n    //     }\r\n\r\n    //     slides.forEach(item => item.style.display = 'none');           //Скрываем все слайды на странице\r\n\r\n    //     slides[slideIndex - 1].style.display = 'block';                //Ставим слайду display = block\r\n\r\n    //     if (slides.length < 10) {\r\n    //         current.textContent = `0${slideIndex}`;                    //Если количество слайдов меньше 10, то добавляем в номер текущего слайда 0\r\n    //     } else {\r\n    //         current.textContent = slideIndex;                          //иначе не добавляем\r\n    //     }\r\n    // }\r\n\r\n    // function plusSlides(n) {\r\n    //     showSlides(slideIndex += n)                                    //Функция для вызова showSlides()\r\n    // }\r\n    \r\n    // prev.addEventListener('click', (e) => {                           //Событие на стрелки с вызовом функции\r\n    //     e.preventDefault();\r\n    //     plusSlides(-1);\r\n    // });\r\n\r\n    // next.addEventListener('click', (e) => {\r\n    //     e.preventDefault();\r\n    //     plusSlides(1);\r\n    // })\r\n\r\n}\r\n\r\nexport default slider;","function tabs() {\r\n    const tabs = document.querySelectorAll('.tabheader__item'),                               //Создаем переменные: 1. массив из кнопок меню \r\n          tabsContent = document.querySelectorAll('.tabcontent'),                             //                    2. массив из контентов табов                    \r\n          tabsParent = document.querySelector('.tabheader__items');                           //                    3. активная кнопка с определенным классом\r\n\r\n\r\n    function hideTabContent() {                                                              //Функция для переборки контента и добавления и удаления определенного класс\r\n        tabsContent.forEach((item) => {\r\n            item.classList.add('hide');\r\n            item.classList.remove('show', 'fade');\r\n        });\r\n\r\n        tabs.forEach((tab) => {                                                             //А также для удаления активного класса\r\n            tab.classList.remove('tabheader__item_active');\r\n        });\r\n    };  \r\n    \r\n    function showTabContent(i = 0) {                                                       //Функция для добавления определенному контенту классов и удалению класса, а также добавлению активного класса кнопке\r\n        tabsContent[i].classList.add('show', 'fade');\r\n        tabsContent[i].classList.remove('hide');\r\n        tabs[i].classList.add('.tabheader__item_active');\r\n    };\r\n\r\n    hideTabContent();\r\n\r\n    showTabContent();\r\n\r\n\r\n    tabsParent.addEventListener('click', (e) => {                                         //Делегирование событий.. Установка события на родительский элемент кнопок\r\n        const target = e.target;                                                          //Установка переменной - элемент на который нажали(кнопку)\r\n\r\n        if (target && target.classList.contains('tabheader__item')) {                     //Если элемент, на который нажали есть и у этого элемента имеется класс 'tabheader__item'\r\n            tabs.forEach((item, i) => {                                                   //Перебираем кнопки-элементы\r\n                if (target == item) {                                                     //Если элемент , на который нажали равен элементу в переборе \r\n                    hideTabContent();                                                     //То вызываем функции к этому элементу\r\n                    showTabContent(i);\r\n                };\r\n            });\r\n        };\r\n    });\r\n}\r\n\r\nexport default tabs;","function timer() {\r\n    const day = new Date();\r\n\r\n    const year = day.getFullYear();\r\n    const month = day.getMonth();\r\n    const chislo = day.getDate();\r\n\r\n    const afterData = `${year}-${month + 1}-${chislo + 2}`;\r\n\r\n\r\n    const deadline = afterData;\r\n\r\n    function getTimeRemaining(endtime) {\r\n        const t = Date.parse(endtime) - Date.parse(new Date()),\r\n              days = Math.floor(t / (1000 * 60 * 60 * 24)),\r\n              hours = Math.floor((t / (1000 * 60 * 60) % 24)),\r\n              minutes = Math.floor((t / 1000 / 60) % 60),\r\n              seconds = Math.floor((t / 1000) % 60);\r\n        return {\r\n            'total': t,\r\n            'days': days,\r\n            'hours': hours,\r\n            'minutes': minutes,\r\n            'seconds': seconds\r\n        };            \r\n    }\r\n\r\n    function getZero(num) {\r\n        if (num >= 0 && num < 10) {\r\n            return `0${num}`;\r\n        } else {\r\n            return num;\r\n        }\r\n    }\r\n\r\n    function setClock(selector, endtime) {\r\n        const timer = document.querySelector(selector),\r\n              days = timer.querySelector('#days'),\r\n              hours = timer.querySelector('#hours'),\r\n              minutes = timer.querySelector('#minutes'),\r\n              seconds = timer.querySelector('#seconds'),\r\n              \r\n              timeInterval = setInterval(updateClock, 1000);\r\n        \r\n        updateClock();      \r\n\r\n        function updateClock() {\r\n            const t = getTimeRemaining(endtime);\r\n\r\n            days.innerHTML = getZero(t.days);\r\n            hours.innerHTML = getZero(t.hours);\r\n            minutes.innerHTML = getZero(t.minutes);\r\n            seconds.innerHTML = getZero(t.seconds);\r\n\r\n            if (t.total <= 0) {\r\n                clearInterval(timeInterval);\r\n            }\r\n        }\r\n    }\r\n\r\n    setClock('.timer', deadline);\r\n}\r\n\r\nexport default timer;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","\"use strict\"\r\n\r\nimport tabs from './modules/tabs';\r\nimport modalWindow from './modules/modalwindow';\r\nimport timer from './modules/timer';\r\nimport forms from './modules/forms';\r\nimport cards from './modules/cards';\r\nimport slider from './modules/slider';\r\nimport calculate from './modules/calculate'; \r\nimport {modalOpen} from './modules/modalwindow';\r\n\r\nwindow.addEventListener('DOMContentLoaded', () => {\r\n\r\n    const modalTimerId = setTimeout(() => modalOpen('.modal', modalTimerId), 50000);                             //Открытие модального окна через 50с через функцию setTimeout\r\n\r\n    tabs();\r\n    modalWindow('[data-modal]', '.modal', modalTimerId);\r\n    timer();\r\n    forms('form', modalTimerId);\r\n    cards();\r\n    slider();\r\n    calculate();      \r\n\r\n});\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"names":[],"sourceRoot":""}